<%- include("../parts/html-head") %> <%- include("../parts/navbar") %>
<style>
  form .mb-3 .form-text {
    color: red;
  }
</style>
<div class="container mt-3">
  <div class="row">
    <div class="col-6">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Add info</h5>
          <form name="form1" method="post" onsubmit="sendForm(event)">
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="name" name="name" />
              <div class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="text" class="form-control" id="email" name="email" />
              <div class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="phone" class="form-label">Phone</label>
              <input
                type="text"
                class="form-control"
                id="phone"
                name="phone"
              />
              <div class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="birthday" class="form-label">Birthday</label>
              <input
                type="date"
                class="form-control"
                id="birthday"
                name="birthday"
              />
              <div class="form-text"></div>
            </div>
            <button type="submit" class="btn btn-primary">Add</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<%- include("../parts/scripts") %>
<script>
  const { name, email, phone } = document.form1;

  const sendForm = (e) => {
    e.preventDefault();
    name.nextElementSibling.innerHTML = "";
    name.style.border = "1px solid black";
    email.nextElementSibling.innerHTML = "";
    email.style.border = "1px solid black";
    phone.nextElementSibling.innerHTML = "";
    phone.style.border = "1px solid black";

    function validateEmail(email) {
      const email_re =
        /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return email_re.test(email);
    }

    function validatePhone(phone) {
      const phone_re = /^09\d{2}-?\d{3}-?\d{3}$/;
      return phone_re.test(phone);
    }

    let isPass = true;
    if (name.value.length < 3) {
      isPass = false;
      name.nextElementSibling.innerHTML = "It's too short";
      name.style.border = "1px solid red";
    }

    if(!email.value.length){
      isPass = false;
      email.nextElementSibling.innerHTML = "Cannot be blank";
      email.style.border = "1px solid red";
    }

    if (email.value && !validateEmail(email.value)) {
      isPass = false;
      email.nextElementSibling.innerHTML = "Please enter a correct email";
      email.style.border = "1px solid red";
    }

    if(!phone.value.length){
      isPass = false;
      phone.nextElementSibling.innerHTML = "Cannot be blank";
      phone.style.border = "1px solid red";
    }

    if (phone.value && !validatePhone(phone.value)) {
      isPass = false;
      phone.nextElementSibling.innerHTML =
        "Please enter a correct phone number";
      phone.style.border = "1px solid red";
    }

    if (isPass) {
      const fd = new FormData(document.form1);
      const usp = new URLSearchParams(fd);
      fetch("", {
        method: "post",
        body: usp.toString(),
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
        },
      })
        .then((r) => r.json())
        .then((result) => {
          console.log({
            result,
          });
          if (result.success) {
                Swal.fire({
                  text: "Added successfully",
                  icon: "success",
                });
              } else {
                switch (result.code) {
                  case 1:
                    Swal.fire({
                      text: "This email has been registered already",
                      icon: "error",
                    });
                    break;
                  case 2:
                    Swal.fire({
                      text: "This phone has been registered already",
                      icon: "error",
                    })
                    break;
                  case 3:
                    Swal.fire({
                      text: "Add unsuccessful",
                      icon: "error",
                    })
                    break;
                }

                for (let k in result.errors) {
                  const field = document.form1[k];
                  myModal2.show();
                  field.style.border = "1px solid red";
                  field.nextElementSibling.innerHTML = result.errors[k];
                }
              }
        })
        .catch((ex) => {
          console.log(ex);
        });
    }
  };

</script>
<%- include("../parts/html-foot") %>
